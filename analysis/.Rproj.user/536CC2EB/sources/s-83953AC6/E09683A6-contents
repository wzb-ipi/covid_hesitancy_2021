library(DeclareDesign)
ate_1 <- .03 # Trusted sources
ate_2 <- .08 # Normalization of scientific updating
ate_3 <- .0  # First signal pro 
ate_4_1_0 <- -.09 # effect of inconsistent signal: change not normalized
ate_4_1_1 <- -.06 # effect of inconsistent signal: change normalized
ate_4_2_0 <- -.08 # effect of inconsistent signal: untrusted source
ate_4_2_1 <- -.03 # effect of inconsistent signal: trusted source


design <- 
  declare_model(
    N = 20000,
    U = rnorm(N),
    potential_outcomes(
      Y ~ ate_1 * Z1 + ate_2 * Z2 + ate_3 * Z3 + 
        Z4*((Z1==0)*ate_4_1_0 + (Z1==1)*ate_4_1_1 +
            (Z2==0)*ate_4_2_0 + (Z2==1)*ate_4_2_1) + U,
      conditions = list(Z1 = 0:1, Z2 = 0:1, Z3 = 0:1, Z4 = 0:1))) +
  declare_inquiry(
          Trust = ate_1 + .5*(ate_4_1_1 - ate_4_1_0), 
          Trust_Interaction = ate_4_1_1 - ate_4_1_0, 
          Normalization_Interaction = ate_4_2_1 - ate_4_2_0,
          Inconsistency = (ate_4_1_0 + ate_4_1_1 + ate_4_2_0 + ate_4_2_1)/2) +
  declare_assignment(Z1 = complete_ra(N), Z2 = complete_ra(N),
                         Z3 = complete_ra(N), Z4 = complete_ra(N)) +
  declare_measurement(Y = reveal_outcomes(Y ~ Z1 + Z2 + Z3 + Z4),
                          Z1 = Z1 - .5,
                          Z2 = Z2 - .5,
                          Z3 = Z3 - .5,
                          Z4 = Z4 - .5) +
  declare_estimator(Y ~ Z1*Z2*Z3*Z4, model = lm_robust, 
                        term = c("Z1", "Z4", "Z1:Z4", "Z2:Z4"),
                        inquiry = c("Trust", "Inconsistency", "Trust_Interaction", "Normalization_Interaction"))

diagnosis <- diagnose_design(design, sims = 200)    