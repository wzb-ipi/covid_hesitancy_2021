dplyr::filter(!(var == "refusing" & set == "refusing")) %>%
mutate(var = factor(var,   rev(var_list$new_name), rev(var_list$label))) %>%
ggplot(aes(estimate, var, color = set)) +
geom_point(position=position_dodge(width = .5)) +
geom_errorbar(aes(xmin = conf.low, xmax = conf.high), width = .25,  position=position_dodge(width = .5)) +
facet_grid(~treatment) +
geom_vline(xintercept = 0, color = "red") +
theme_bw()  +
ylab("")
lm_plot
pdf(lm_plot_path, height = 6, width = 9)
lm_plot
dev.off()
M <- lm_robust(outcome_diff~distance_km*negative_diff*transaction_diff, data = df)
# Different for old
linearHypothesis(M, "negative_diff + distance_km:negative_diff = transaction_diff + distance_km:transaction_diff")
# Different for young
linearHypothesis(M, "negative_diff  = transaction_diff ")
M1 <- lm(outcome_diff~distance_km*negative_diff*transaction_diff*financialB_diff, data = df)
M2 <- lm(outcome_diff~distance_km*negative_diff*transaction_diff*financialB_diff, data = dplyr::filter(df, status == "Undecided"))
dff <- list(
Freedoms = interplot(m = M1, var1 = "negative_diff", var2 = "distance_km", plot = FALSE),
'Local Doctors' = interplot(m = M1, var1 = "transaction_diff", var2 = "distance_km", plot = FALSE),
'Financial 50' = interplot(m = M1, var1 = "financialB_diff", var2 = "distance_km", plot = FALSE)) %>% bind_rows(.id = "Treatment")
distance_plot <- dff %>%
ggplot(aes(x=distance_km, y=coef, colour=Treatment)) + #geom_point() +
geom_line() +geom_ribbon(aes(ymin=lb, ymax=ub, fill=Treatment), alpha=0.1) + ylab("effect of treatment on acceptance") + xlab("Distance to Vaccination Center (in km)")  + theme_bw()
distance_plot
pdf(distance_plot, width = 7, height = 4)
distance_plot
dev.off()
M <- lm_robust(outcome_diff~distance_km*negative_diff*transaction_diff, data = df)
# Different for old
linearHypothesis(M, "negative_diff + distance_km:negative_diff = transaction_diff + distance_km:transaction_diff")
# Different for young
linearHypothesis(M, "negative_diff  = transaction_diff ")
M1 <- lm(outcome_diff~distance_km*negative_diff*transaction_diff*financialB_diff, data = df)
M2 <- lm(outcome_diff~distance_km*negative_diff*transaction_diff*financialB_diff, data = dplyr::filter(df, status == "Undecided"))
dff <- list(
Freedoms = interplot(m = M1, var1 = "negative_diff", var2 = "distance_km", plot = FALSE),
'Local Doctors' = interplot(m = M1, var1 = "transaction_diff", var2 = "distance_km", plot = FALSE),
'Financial 50' = interplot(m = M1, var1 = "financialB_diff", var2 = "distance_km", plot = FALSE)) %>% bind_rows(.id = "Treatment")
distance_plot <- dff %>%
ggplot(aes(x=distance_km, y=coef, colour=Treatment)) + #geom_point() +
geom_line() +geom_ribbon(aes(ymin=lb, ymax=ub, fill=Treatment), alpha=0.1) + ylab("effect of treatment on acceptance") + xlab("Distance to Vaccination Center")  + theme_bw()
distance_plot
pdf(distance_plot, width = 7, height = 4)
distance_plot
dev.off()
figure_13 <- ggarrange(lm_plot, age_plot, distance_plot,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
figure_13
pdf(fig_13_path, width = 8, height = 15)
figure_13
dev.off()
M <- lm_robust(outcome_diff~age2*negative_diff*transaction_diff, data = df)
# Different for old
linearHypothesis(M, "negative_diff + age2:negative_diff = transaction_diff + age2:transaction_diff")
# Different for young
linearHypothesis(M, "negative_diff  = transaction_diff ")
M0 <- lm(outcome_diff~age2*negative_diff*transaction_diff*financialB_diff, data = df)
M1 <- lm(outcome_diff~age*negative_diff*transaction_diff*financialB_diff, data = df)
M2 <- lm(outcome_diff~age*negative_diff*transaction_diff*financialB_diff, data = dplyr::filter(df, status == "Undecided"))
dff <- list(
Freedoms = interplot(m = M2, var1 = "negative_diff", var2 = "age", plot = FALSE),
'Local Doctors' = interplot(m = M2, var1 = "transaction_diff", var2 = "age", plot = FALSE),
'Financial 50' = interplot(m = M2, var1 = "financialB_diff", var2 = "age", plot = FALSE)) %>% bind_rows(.id = "Treatment")
age_plot <- dff %>%
ggplot(aes(x=age, y=coef, colour=Treatment)) + #geom_point() +
geom_line() +geom_ribbon(aes(ymin=lb, ymax=ub, fill=Treatment), alpha=0.1) + ylab("effect of treatment on acceptance") + xlab("age of respondent")  + theme_bw()
age_plot
pdf(age_fig_path, width = 7, height = 4)
age_plot
dev.off()
figure_13 <- ggarrange(lm_plot, age_plot, distance_plot,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
figure_13
pdf(fig_13_path, width = 8, height = 15)
figure_13
dev.off()
centers <- geojsonsf::geojson_sf("input/vaccination_centers/export.geojson")
View(centers)
summary(centers$vaccination)
install.packages("gtsummary")
install.packages("gtsummary")
centers$vaccination %>% tbl_summary()
library(gtsummary)
centers$vaccination %>% tbl_summary()
dplyr::count(centers, vaccination)
plyr::count(centers$vaccination)
# Chunk 1: setup
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE, comment=NA)
options(qwraps2_markup = "markdown")
## Packages
if (!require(pacman)) install.packages("pacman")
pacman::p_load(
rgdal,       # geo data
geojsonsf,   # read json
rgeos,       # geo data
sf,          # geo data
gridExtra,   # plot arrange
gtrendsR,    # google trends
aod,         # hypothesis testing (1.3.1)
car,         # linear hypothesis testing for causal tree (3.0-2)
corrplot,    # Correlations (0.84)
DeclareDesign,
dplyr,       # Data manipulation (0.8.0.1)
evtree,      # evolutionary learning of globally optimal trees (1.0-7)
fastDummies,
fBasics,     # Summary statistics (3042.89)
ggplot2,
ggpubr,
grf,         # Generalized random forests (0.10.2)
haven,       # load sav
interplot,   # Interactions plotting
kableExtra,  # Prettier RMarkdown (1.0.1)
knitr,
labelled,
psych,       # Correlation p-values (1.8.12)
purrr,
rpart,       # Classification and regression trees, or CART (4.1-13)
reshape2,
rpart.plot,  # Plotting trees (3.0.6)
readr,       # Reading csv files (1.3.1)
sjlabelled,
stats,
summarytools,
texreg,
tidyverse,
tidyselect,
tidyr,       # Database operations (0.8.3)
treeClust,   # Predicting leaf position for causal trees (1.1-7)
tibble)      # Modern alternative to data frames (2.1.1)
# Number of trees for causal forests
N_trees = 1000
# Set seed for reproducibility
set.seed(201911)
# Paths
datapath <- "../../../../4_data/wave_1/D-P21-13185 HU Berlin Impfskeptiker_Finaler_Datensatz.sav"
fig_1_path <- "../figures/figure_1.pdf"
fig_2_path <- "../figures/figure_2.pdf"
fig_3_path <- "../figures/figure_3.pdf"
fig_4_path <- "../figures/figure_4.pdf"
google_plot_path <- "../figures/figure_5.pdf"
corr_matrix_plot_path <- "../figures/figure_6.pdf"
correlates_plot_path  <- "../figures/figure_7.pdf"
undecided_cf_path     <- "../figures/figure_8.pdf"
blps_plot_path <- "../figures/figure_9.pdf"
lm_plot_path <- "../figures/figure_10.pdf"
fig_11_path <- "../figures/figure_11.pdf"
age_fig_path <- "../figures/figure_12.pdf"
fig_13_path <- "../figures/figure_13.pdf"
fig_15_path <- "../figures/figure_15.pdf"
combind_path<- "../figures/figure_13.pdf"
figure_subgroups_path<- "../figures/figure_14.pdf"
tab_1_path <- "../figures/table_1.tex"
tab_2_path <- "../figures/table_2.tex"
tab_3_path <- "../figures/table_3.tex"
# variable names and labels
var_list <- read.csv("input/vars.csv") %>% arrange(order)
covariate_names <- var_list$new_name[var_list$covariate==1]
# Labels for treatments
treatments <- treatment_levels <- c("financialA","financialB", "negative", "transaction")
treatment_levels_diff <- c("financialA_diff","financialB_diff", "negative_diff", "transaction_diff")
treatment_labels <- c("Financial 25", "Financial 50", "Freedoms", "Local Doctors")
statuses <- c("Acceptant", "Refusals", "Undecided")
# Training fraction
train_fraction <- 1  # for causal forests: currently all data used
# Chunk 2
# Chunk 3
# Chunk 4
# Chunk 1
# get labels
Z_labels <- read_sav(datapath) %>%
pull(c_0031) %>% attr("labels") %>%
names() %>% strsplit( "-") %>%
lapply(function(x) data.frame(t(x))) %>% bind_rows() %>% mutate(Z_1_1 = 1:12) %>%
mutate(negative_t1 = as.numeric(X1),
transaction_t1 = as.numeric(X3),
financialA_t1 = 1*(X2 =="1a"),
financialB_t1 = 1*(X2 =="1b")) %>%
dplyr::select(Z_1_1, negative_t1, financialA_t1, financialB_t1, transaction_t1)
kable(Z_labels, booktabs = TRUE)
df <- read_sav(datapath) %>%
rowid_to_column("ID")  %>%
mutate(
Z_1_1 = as.numeric(paste(c_0031)),
outcome_t1 = v_74 / 10,
Z_1_2 = as.numeric(paste(c_0032)),
outcome_t2 = v_77 / 10
) %>%
left_join(Z_labels) %>%
left_join(
Z_labels %>%
rename(
Z_1_2 = Z_1_1,
negative_t2 = negative_t1,
transaction_t2 = transaction_t1,
financialA_t2 = financialA_t1,
financialB_t2 = financialB_t1
)
) %>%
#    mutate(distance_km = NA) %>%
# rename covariates
rename_at(
vars(var_list$var_name[var_list$transformed==0 & var_list$new_name!="distance_km"]),
~ var_list$new_name[var_list$transformed==0 & var_list$new_name!="distance_km"]) %>%
# transformations
mutate(
outcome_diff     = outcome_t2 - outcome_t1,
negative_diff    = negative_t2 - negative_t1,
financialA_diff  = financialA_t2 - financialA_t1,
financialB_diff  = financialB_t2 - financialB_t1,
transaction_diff = transaction_t2 - transaction_t1,
date = as.numeric(as.Date(datetime)),
postcode = as.numeric(postcode),
days = (date - min(date) +1)/21, # Normalized to 0-1
status = ifelse(
is.na(vaccination.intent),
"Vaccinated",
paste(vaccination.intent)
),
status = dplyr::recode(
status,
"1" = "Acceptant",
"2" = "Refusing",
"3" = "Undecided"
),
casmin = case_when(
education== 1 & v_142== 7 ~ 0,
education== 2 & v_142== 7 ~ 1,
(education==2) & (v_142==1 | v_142==2 | v_142==3) ~ 2,
(education==1) & (v_142==1 | v_142==2 | v_142==3)  ~ 2,
education== 3 & v_142== 7 ~ 3,
(education==3) & (v_142==1 | v_142==2 | v_142==3) ~ 4,
(education==4 | education==5) & (v_142==7)~ 5,
(education==4 | education==5) & (v_142==1 | v_142==2 | v_142==3) ~ 6,
(education==4)  ~ 7,
(education==5)  ~ 8,
TRUE ~ NA_real_ # This is for all other values not covered by the above.
),
eduyears = case_when(
casmin == 0 ~ 8,
casmin == 1 ~ 9,
casmin == 2 ~ 12,
casmin == 3 ~ 10,
casmin == 4 ~ 13,
casmin == 5 ~ 13,
casmin == 6 ~ 15,
casmin == 7 ~ 16,
casmin == 8 ~ 18,
TRUE ~ NA_real_ # This is for all other values
),
eduyears = (eduyears - min(eduyears, na.rm = TRUE))/max(eduyears, na.rm = TRUE),
household.larger = (household.size > 2)*1,
covid.media = 1-(covid.media-1)/4,
vaccinated = 1*(vaccination == 1),
network.vaccinated = (network.vaccinated-1)/4,
covid.infection = 1*(covid.infection == 1),
covid.infection.proximity = (covid.infection.proximity-1)/2,
covid.information = 1- (covid.information-1)/4,
covid.rules.mask = 1- (covid.rules.mask-1)/5,
covid.rules.distance = 1- (covid.rules.distance-1)/5,
support.distance = 1-(support.distance-1)/4,
covid.income = 1-(covid.income-1)/4,
voted = 1*(voter.turnout ==1),
age2 = (age - min(age))/(max(age) - min(age)),
male = 1*(gender == 2),
political.interest = 1 - (political.interest-1)/3,
left.right = (left.right-1)/10,
CDU.CSU = 1*(party.id <= 2),
CDU.CSU = ifelse(is.na(CDU.CSU), 0, CDU.CSU),
SPD = 1*(party.id ==3),
SPD = ifelse(is.na(SPD), 0, SPD),
AfD = 1*(party.id ==4),
AfD = ifelse(is.na(AfD), 0, AfD),
Greens = 1*(party.id ==5),
Greens = ifelse(is.na(Greens), 0, Greens),
FDP = 1*(party.id ==6),
FDP = ifelse(is.na(FDP), 0, FDP),
Left = 1*(party.id ==7),
Left = ifelse(is.na(Left), 0, Left),
No.party = 1*(party.id == 9),
No.party = ifelse(is.na(No.party), 0, No.party),
solidarity = solidarity/10,
international.solidarity = international.solidarity/10,
EU.support = EU.support/10,
migration.support = migration.support/10,
Employed = 1*(Employment.Status==1),
citizenship = (citizenship==3)*1,
Country.of.birth  = 1*(Country.of.birth==2),
risk = risk/10,
trust = trust/10,
trust.government = trust.government/4,
trust.experts = trust.experts/4,
trust.country = trust.country/4,
trust.media =  trust.media/4,
trust.healthcare = trust.healthcare/4,
acceptant = 1*(vaccination.intent == 1),
acceptant = ifelse(is.na(vaccination.intent), 1, acceptant),
refusing = vaccination.intent == 2,
refusing = ifelse(is.na(vaccination.intent), 0, refusing),
undecided = 1*(vaccination.intent == 3),
undecided = ifelse(is.na(vaccination.intent), 0, undecided),
health = (health - 1)/6,
health2 = 1*(health2 == 1),
covid.surveys = ifelse(covid.surveys == 99, NA, covid.surveys),
east.west =ifelse(federal.state== "4" |#"Brandenburg"
federal.state== "8" |#"Mecklenburg-Vorpommern"
federal.state== "13"|#"Sachsen"
federal.state== "14"|#Sachsen-Anhalt
federal.state== "16" #"Thüringen"
, 1, 0)
)
# Chunk 2
# zip code: five digits
#Source: https://www.suche-postleitzahl.org/downloads
ogrInfo(dsn="input/postal code/plz-5stellig.shp/plz-5stellig.shp")
postal_shape <- readOGR(dsn="input/postal code/plz-5stellig.shp/plz-5stellig.shp")
#plot(postal_shape)
typeof(postal_shape)
proj4string(postal_shape)
# get centroid
postal_shape_centers <- SpatialPointsDataFrame(gCentroid(postal_shape, byid=TRUE),
postal_shape@data, match.ID=FALSE)
# test, looks good
plot(postal_shape_centers)
# transform to get meters
postal_shape_centers1<-spTransform(postal_shape_centers,CRS("+proj=utm +zone=32 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs"))
proj4string(postal_shape_centers1)
plot(postal_shape_centers1)
#########################################
# load vaccination centers with geo code
#########################################
# Source:
centers <- geojsonsf::geojson_sf("input/vaccination_centers/export.geojson")
# check if all covid 19 vaccinations
plyr::count(centers$vaccination)
# could be that vaccination center is multiple times in the data (see wiki page)
# for us not important, only minimal distance important
# extract the coordinnates
poly<-centers %>%
dplyr::select(geometry)
class(poly)
# calculate center again because some object are polgyon and we want points
centers  <- st_centroid(poly)
centers_points <- as_Spatial(centers)
plot(centers_points)
# convert to same format
# transform to get meters
proj4string(centers_points)
pts<-spTransform(centers_points,CRS("+proj=utm +zone=32 +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs"))
proj4string(pts)
#########################################
# merge
#########################################
# load shp as dataframe (to merge onto)
postal_shape_out <- st_read('input/postal code/plz-5stellig.shp/plz-5stellig.shp')
# gDistance by default returns the cartesian minimum distance between the two geometries in the units of the current projection.
postal_shape_out$distance_vaccination<-sapply(1:length(postal_shape_centers1),function(x)gDistance(pts,postal_shape_centers1[x,]))
# check distribution, looks reasonable
hist(postal_shape_out$distance_vaccination)
# rename to fit survey file
distance<-as.data.frame(postal_shape_out)%>%
dplyr::rename(postcode = plz) %>%
dplyr::mutate(postcode = as.numeric(postcode)) %>%
dplyr::rename(city = note) %>%
dplyr::mutate(distance_km=distance_vaccination/1000) %>%
dplyr::select (-c(geometry,distance_vaccination))
typeof(distance$postcode)
# check for duplicates
n_occur <- data.frame(table(distance$postcode))
# merge
df <- left_join(df, distance, by = "postcode")
hist(df$distance_km)
df <- df %>% dplyr::mutate(distance_km_raw = distance_km,
distance_km = (distance_km - min(distance_km, na.rm = TRUE))/
(max(distance_km, na.rm = TRUE) - min(distance_km, na.rm = TRUE)))
# Chunk 3
#print(dfSummary(df[,covariate_names], graph.magnif = 0.75), method = 'render')
# Chunk 4
# This should also be possible with pivot_longer
df_stacked <-
bind_rows(mutate(df, t = 1), mutate(df, t = 2)) %>%
mutate(
outcome     = ifelse(t == 1, outcome_t1, outcome_t2),
negative    = ifelse(t == 1, negative_t1, negative_t2),
financialA  = ifelse(t == 1, financialA_t1, financialA_t2),
financialB  = ifelse(t == 1, financialB_t1, financialB_t2),
transaction = ifelse(t == 1, transaction_t1, transaction_t2),
)
# Chunk 5
# covariate_names[!(covariate_names %in% names(df))]
small_df <-
df %>% dplyr::select(all_of(covariate_names)) %>%
# select_if(is.numeric) %>%
drop_na()
# Chunk 6: summary_stats
# Make a data.frame containing summary statistics of interest
summ_stats <-
small_df %>%
fBasics::basicStats() %>%
t() %>%
as.data.frame() %>%
dplyr::select("Mean", "Stdev", "Minimum", "1. Quartile", "Median",  "3. Quartile", "Maximum") %>%
rename('Lower quartile'= '1. Quartile', 'Upper quartile' ='3. Quartile')
# Add in labels
summ_stats <- summ_stats %>%
mutate(Variable = factor(rownames(summ_stats), var_list$new_name, var_list$label)) %>% relocate(Variable)
# Chunk 7: summary_stats_table
# Pretty-printing in HTML
summ_stats_table <- kable(summ_stats, "html", digits = 2, booktabs = TRUE, row.names = FALSE)
kable_styling(summ_stats_table,
bootstrap_options=c("striped", "hover", "condensed", "responsive"),
full_width=FALSE)
tab_1 <- kable(summ_stats, format = "latex", digits = 2, caption = "Summary statistics", booktabs = T, linesep = "", label = "SummStats", row.names = FALSE) %>%
kable_styling(latex_options="scale_down")
fileConn<-file(tab_1_path)
writeLines(tab_1, fileConn)
close(fileConn)
# Chunk 8: cor plot
pairwise_pvalues <- psych::corr.test(small_df, small_df)$p
small_df  %>%
cor %>%
corrplot::corrplot(type="upper",
tl.col="black",
order="original",
tl.cex=1,
addgrid.col = "black",
p.mat=pairwise_pvalues,
sig.level=0.05,
number.font=10,
insig="blank")
pdf(corr_matrix_plot_path, height = 10, width = 10)
small_df %>%
cor %>%
corrplot::corrplot(type="upper",
tl.col="black",
order="original",
tl.cex=1,
addgrid.col = "black",
p.mat=pairwise_pvalues,
sig.level=0.05,
number.font=10,
insig="blank")
dev.off()
# Chunk 9
fig_1 <- df %>% ggplot(aes(status)) +
geom_hline(yintercept=0.7, linetype="longdash", lwd=0.35, size=0.75, colour = "#B55555") +
geom_bar(aes(y = (..count..)/sum(..count..)),width = 0.6,alpha = 0.5) +
scale_y_continuous(labels=scales::percent) +
theme_bw(base_size=16)+
theme(axis.title.y = element_blank())+
ylab("Percent (%)")+
coord_flip()
fig_1
pdf(fig_1_path, height = 3, width = 6)
fig_1
dev.off()
# Chunk 10
fig_11 <-
df %>% dplyr::select(starts_with("fear.")) %>%
mutate_if(is.character, as.numeric) %>%
melt(variable.name = "Group") %>%
mutate(Group =
factor(Group,
c("fear.longterm", "fear.admission", "fear.effectiveness", "fear.side.effects", "fear.no.danger"),
c("Longterm Consequences", "Doubt approval process", "Doubt effectiveness", "Side Effects", "Covid not dangerous")))%>%
group_by(Group) %>%
summarize(mean = 100*mean(value, na.rm = TRUE))  %>%
ggplot() +
geom_bar(aes(Group, mean), stat = "identity", width = 0.6,alpha = 0.5)+
theme_bw(base_size=18)+
ylab("Percent (%)")+
theme(axis.title.y = element_blank())+
coord_flip()
fig_11
pdf(fig_11_path, height = 4, width = 8)
fig_11
dev.off()
# Chunk 11
family_order <- var_list %>% group_by(family) %>% slice(1) %>% arrange(Family_order) %>% pull(family)
correlates <-
list("acceptant", "refusing", "undecided") %>%
lapply(function(y)
lapply(setdiff(covariate_names, tolower(statuses)), function(x)
lm_robust(as.formula(paste(y, "~", x)), data = df) %>% tidy %>% dplyr::mutate(y=y, x=x)) %>% bind_rows) %>% bind_rows %>% dplyr::filter(term!="(Intercept)" & !(x %in% c("acceptant", "refusing", "undecided"))) %>%
dplyr::mutate(x = factor(x, rev(var_list$new_name), rev(var_list$label))) %>%
left_join(var_list %>% dplyr::rename(term = new_name) %>% dplyr::select(term, family)) %>%
dplyr::mutate(family = factor(family, family_order))
fig_cov <-
correlates %>%
dplyr::mutate(y = factor(y, c("acceptant", "undecided", "refusing" ))) %>%
dplyr::filter(x!="federal.state") %>%
ggplot(aes(estimate    , x)) + geom_point() + facet_grid(family ~ y, scales = "free_y") + ylab("") + xlab("How much more or less likely to be [acceptant / undecided / refusing] at baseline")  +
geom_vline(xintercept = 0, color = "red") +
theme_bw() +
geom_errorbar(aes(xmin = conf.low, xmax = conf.high), width = .25)
fig_cov
pdf(correlates_plot_path, height =9, width = 8)
fig_cov
dev.off()
mean(df$outcome_t1)
mean(df$outcome_t2)
mean(df$outcome_diff)
lm_robust(outcome_t2 ~ ``, data = df)
lm_robust(outcome_t2 ~ 1, data = df)
lm_robust(outcome_diff ~ 1, data = df)
lm_robust(outcome_diff ~ 1, data = df)
lm_robust(outcome_diff ~ 1, data = df) %>% tidy %>% kable(digits = 2)
